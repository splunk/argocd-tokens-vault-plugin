apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: argocd-vault-plugin-integration-tests
spec:
  templates:
    - name: workflow
      synchronization:
        semaphore:
          configMapKeyRef:
            name: mutex
            key: template
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: fetch-creds
            template: fetch-creds
        - - name: build-exe
            template: build-exe
            arguments:
              parameters:
                - name: username
                  value: '{{ steps.fetch-creds.outputs.parameters.username }}'
                - name: password
                  value: '{{ steps.fetch-creds.outputs.parameters.password }}'
        - - name: deploy-argocd
            template: deploy-argocd
            arguments:
              parameters:
              - name: username
                value: '{{ steps.fetch-creds.outputs.parameters.username }}'
              - name: password
                value: '{{ steps.fetch-creds.outputs.parameters.password }}'
        - - name: deploy-vault
            template: deploy-vault
            arguments: 
              artifacts:
                - name: vault-plugin-argocd-tokens
                  from: "{{ steps.build-exe.outputs.artifacts.vault-plugin-argocd-tokens }}"
        - - name: configure-vault
            template: configure-vault
            arguments:
              parameters:
              - name: vault-ip
                value: '{{steps.deploy-vault.ip}}'
              - name: username
                value: '{{ steps.fetch-creds.outputs.parameters.username }}'
              - name: password
                value: '{{ steps.fetch-creds.outputs.parameters.password }}'
        - - name: run-tests
            template: run-tests
            arguments:
              parameters:
              - name: vault-ip
                value: '{{steps.deploy-vault.ip}}'
              - name: username
                value: '{{ steps.fetch-creds.outputs.parameters.username }}'
              - name: password
                value: '{{ steps.fetch-creds.outputs.parameters.password }}'
        - - name: destroy
            template: destroy
            arguments:
              parameters:
              - name: vault-ip
                value: '{{steps.deploy-vault.ip}}'
              - name: username
                value: '{{ steps.fetch-creds.outputs.parameters.username }}'
              - name: password
                value: '{{ steps.fetch-creds.outputs.parameters.password }}'
    - name: fetch-creds
      script:
        name: fetch-creds
        image: 'repo.splunk.com/core-ee/workflow-engine/workflow-engine-base:2.0.10'
        command:
          - /bin/bash
        source:

          export VAULT_ADDR=https://secrets.splunkit.io

          export VAULT_NAMESPACE=eeff/velocity

          export KUBE_TOKEN_LOCATION=/var/run/secrets/kubernetes.io/serviceaccount/token

          export VAULT_TOKEN=$(vault write auth/wfe/login role=argocd-tokens-vault-plugin-testing-wfe jwt=$(cat $KUBE_TOKEN_LOCATION) -format=json | jq -r '.auth.client_token')
          
          echo "devplat_bot" > /username.txt

          vault kv get -format=json k8s/eks/eks-auth-helm-secrets | jq -r '.data.data.wfe_gitlab_devplat_bot' > /password.txt

        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
      outputs:
        parameters:
        - name: username
          valueFrom:
            path: /username.txt
        - name: password
          valueFrom:
            path: /password.txt
    - name: build-exe
      inputs:
        parameters:
        - name: username
        - name: password
      script:
        name: build-exe
        image: 'docker.repo.splunkdev.net/ci-cd/ci-container/golang-1.19:1.1.0'
        command:
          - /bin/bash
        source:

          git clone --depth 1 --branch main "https://{{inputs.parameters.username}}:{{inputs.parameters.password}}@cd.splunkdev.com/workflow-engine/common/argocd-tokens-vault-plugin.git" ./argocd-tokens-vault-plugin

          cd "argocd-tokens-vault-plugin"
          
          go mod tidy
          
          go install ./...
          
          CGO_ENABLED=0 GOOS=linux go build -o tmp/plugins/ ./cmd/vault-plugin-argocd-tokens

        resources:
          limits:
            cpu: 2000m
            memory: 6Gi
          requests:
            cpu: 2000m
            memory: 6Gi
      outputs:
        artifacts:
        - name: vault-plugin-argocd-tokens
          path: /go/argocd-tokens-vault-plugin/tmp/plugins/vault-plugin-argocd-tokens
    - name: deploy-argocd
      inputs:
        parameters:
        - name: username
        - name: password
      synchronization:
        semaphore:
          configMapKeyRef:
            name: mutex
            key: deployDelete
      volumes:
        - name: argocd-manifests
          configMap:
            name: argocd-v2-3-3
      script:
        name: deploy
        image: 'repo.splunk.com/core-ee/workflow-engine/workflow-engine-base:2.0.10'
        command:
          - /bin/bash
        source:

          git clone --depth 1 --branch main "https://{{inputs.parameters.username}}:{{inputs.parameters.password}}@cd.splunkdev.com/workflow-engine/common/argocd-tokens-vault-plugin.git" ./argocd-tokens-vault-plugin
        
          kustomize build ./argocd-tokens-vault-plugin/e2e/manifests > ./build.yaml

          kubectl -n argocd-tokens-vault-plugin-testing apply -f ./build.yaml

        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
    - name: deploy-vault
      daemon: true
      inputs: 
        artifacts: 
        - name: vault-plugin-argocd-tokens
          path: /etc/vault/plugins/vault-plugin-argocd-tokens
          mode: 0755
      script: 
        name: deploy-vault
        image: repo.splunk.com/core-ee/workflow-engine/workflow-engine-base:2.0.10
        command:
          - /bin/bash
        source: 
          vault server -dev -dev-root-token-id=root -dev-plugin-dir=/etc/vault/plugins -log-level=debug
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
        env:
        - name: VAULT_DEV_LISTEN_ADDRESS
          value: 0.0.0.0:8200
        - name: VAULT_DEV_ROOT_TOKEN_ID
          vault: 'root'
        - name: VAULT_DISABLE_FILE_PERMISSIONS_CHECK
          value: 'false' 
    - name: configure-vault
      inputs:
        parameters:
        - name: vault-ip
        - name: username
        - name: password
      script:
        name: deploy
        image: 'repo.splunk.com/core-ee/workflow-engine/workflow-engine-base:2.0.10'
        command:
          - /bin/bash
        source:
          export ARGOCD_SERVER="argocd-tokens-vault-plugin-testing.wfe.west.splunkeng.com:8080"
          export ENGINE_PATH="wfecd-stg"
          export VAULT_ADDR="http://{{inputs.parameters.vault-ip}}:8200"

          git clone --depth 1 --branch main "https://{{inputs.parameters.username}}:{{inputs.parameters.password}}@cd.splunkdev.com/workflow-engine/common/argocd-tokens-vault-plugin.git" ./argocd-tokens-vault-plugin
          
          cd "argocd-tokens-vault-plugin"

          source ./e2e/scripts/configure-vault.sh
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
    - name: run-tests
      inputs:
        parameters:
        - name: vault-ip
        - name: username
        - name: password
      script:
        name: run-tests
        image: 'repo.splunk.com/core-ee/workflow-engine/workflow-engine-base:2.0.10'
        command:
          - /bin/bash
        source: 

          git clone --depth 1 --branch main "https://{{inputs.parameters.username}}:{{inputs.parameters.password}}@cd.splunkdev.com/workflow-engine/common/argocd-tokens-vault-plugin.git" ./argocd-tokens-vault-plugin

          export ARGOCD_SERVER="argocd-tokens-vault-plugin-testing.wfe.west.splunkeng.com:8080"
          export ENGINE_PATH="wfecd-stg"
          export VAULT_ADDR="http://{{inputs.parameters.vault-ip}}:8200"
          export VAULT_TOKEN=""

          vault login root 

          pushd ./argocd-tokens-vault-plugin

          source ./e2e/scripts/run-scenarios.sh
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
    - name: destroy
      inputs:
        parameters:
        - name: username
        - name: password
      synchronization:
        semaphore:
          configMapKeyRef:
            name: mutex
            key: deployDelete
      script:
        name: destroy
        image: 'repo.splunk.com/core-ee/workflow-engine/workflow-engine-base:2.0.10'
        command:
          - /bin/bash
        source:

          git clone --depth 1 --branch main "https://{{inputs.parameters.username}}:{{inputs.parameters.password}}@cd.splunkdev.com/workflow-engine/common/argocd-tokens-vault-plugin.git" ./argocd-tokens-vault-plugin
        
          kustomize build ./argocd-tokens-vault-plugin/e2e/manifests > ./build.yaml

          kubectl -n argocd-tokens-vault-plugin-testing delete --wait=false -f ./build.yaml

        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 50m
  arguments: {}
  serviceAccountName: executor
  entrypoint: workflow
  ttlStrategy:
    secondsAfterCompletion: 300
  podGC:
    strategy: OnPodCompletion
  workflowMetadata:
    labels:
      example: 'true'
